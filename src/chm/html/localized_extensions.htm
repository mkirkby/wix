<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <link rel="stylesheet" type="text/css" href="style.css" />

  <title>Localized Extensions</title>
</head>

<body>
  <h1>Localized Extensions</h1>

  <p>You can create your own localized extensions like <a href="WixUI_dialog_library.htm">WixUIExtension</a> using <a href="lit.htm">lit.exe</a>. Localized extensions can even contain multiple languages. Products using these extensions can pass the -cultures switch to <a href="light.htm">light.exe</a> along with the -ext switch to reference the extension.</p>

  <h2>Authoring Libraries</h2>

  <p><a href="extension_development.htm">WiX extensions</a> contain libraries comprised of fragments. These fragments may contain properties, search properties, dialogs, and more. Just like when <a href="localizing.htm">localizing products</a>, replace any localizable fields with variables in the format !(loc.<i>variableName</i>). Product would be authored to reference elements in this library, and when compiled would themselves contain the localization variables.</p>

  <h2>Authoring Localization Files</h2>

  <p>The WiX localization files, or .wxl files, are a collection of strings. For libraries, extension developers can choose whether or not those strings can be overwritten by .wxl files specified during linkage of the product. For example, part of the WixUIExtension's en-US resources are copied below.</p>
  <pre>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;WixLocalization Culture="en-us" xmlns="http://schemas.microsoft.com/wix/2006/localization"&gt;
    &lt;String Id="WixUIBack" Overridable="yes"&gt;&amp;amp;Back&lt;/String&gt;
    &lt;String Id="WixUINext" Overridable="yes"&gt;&amp;amp;Next&lt;/String&gt;
    &lt;String Id="WixUICancel" Overridable="yes"&gt;Cancel&lt;/String&gt;
    &lt;String Id="WixUIFinish" Overridable="yes"&gt;&amp;amp;Finish&lt;/String&gt;
    &lt;String Id="WixUIRetry" Overridable="yes"&gt;&amp;amp;Retry&lt;/String&gt;
    &lt;String Id="WixUIIgnore" Overridable="yes"&gt;&amp;amp;Ignore&lt;/String&gt;
    &lt;String Id="WixUIYes" Overridable="yes"&gt;&amp;amp;Yes&lt;/String&gt;
    &lt;String Id="WixUINo" Overridable="yes"&gt;&amp;amp;No&lt;/String&gt;
    &lt;String Id="WixUIOK" Overridable="yes"&gt;OK&lt;/String&gt;
&lt;/WixLocalization&gt;
</pre>

  <p>These <a href="wixloc_xsd_string.htm">String</a> elements are attributed as @Overridable="yes" to allow for product developers to override these strings with their own values if they so choose. For example, a product developer may wish to use "Previous" instead of "Back", so they can define the same String/@Id in their own .wxl while still linking to the extension where that string is used. This offers product developers the benefits of the library while allowing for customizations. Extension developers can also choose to disallow overriding certain strings if it makes sense to do so.</p>

  <h2>Building Libraries</h2>

  <p>When all the fragment authoring and localization files are complete, they can be compiled and linked together using <a href="candle.htm">candle.exe</a> and <a href="lit.htm">lit.exe</a>.</p>

  <p>First compile all the .wxs sources.</p>
  <pre>
candle.exe example1.wxs -out example1.wixobj
candle.exe example2.wxs -out example2.wixobj
</pre>

  <p>Now link together all the .wixobj files an .wxl files for each culture you want available in the extension library.</p>
  <pre>
lit.exe example1.wixobj example2.wixobj -loc en-us.wxl -loc de-de.wxl -out example.wixlib
</pre>

  <p>To be useful, the .wixlib should be embedded into a managed assembly and returned by WixExtension.GetLibrary().</p>

  <h2>Using the Libraries</h2>

  <p>Product developers reference elements within your .wixlib, as shown in the <a href="WixUI_dialog_library.htm">WixUIExtension</a> example. When compiling and linking, the extension is specified on the command line using the -ext switch. If any additional localization variables are used in the product authoring or would override localization variables in the library, those .wxl files are passed to the -loc switch as shown in the example below.</p>
  <pre>
candle.exe example.wxs -ext WixUIExtension -out example.wixobj
light.exe example.wixobj -ext WixUIExtension -cultures:en-us -loc en-us.wxl -out example.msi
</pre>
</body>
</html>
