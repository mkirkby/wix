<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) Microsoft Corporation.  All rights reserved.
    
    The use and distribution terms for this software are covered by the
    Common Public License 1.0 (http://opensource.org/licenses/cpl1.0.php)
    which can be found in the file CPL.TXT at the root of this distribution.
    By using this software in any fashion, you are agreeing to be bound by
    the terms of this license.
    
    You must not remove this notice, or any other, from this software.
-->
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
    <?include $(var.caerrwxi)?>

    <Fragment>
        <CustomAction Id="WixCheckRebootRequired" BinaryKey="WixCA" DllEntry="WixCheckRebootRequired" Execute="immediate" Return="ignore" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <!-- Condition this so it runs on install and MMode, but not uninstall -->
            <Custom Action="WixCheckRebootRequired" After="InstallFinalize" Overridable="yes">NOT REMOVE~="ALL" AND VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="WixCloseApplications" BinaryKey="WixCA" DllEntry="WixCloseApplications" Execute="immediate" Return="ignore" SuppressModularization="yes" />
        <CustomAction Id="WixCloseApplicationsDeferred" BinaryKey="WixCA" DllEntry="WixCloseApplicationsDeferred" Impersonate="no" Execute="deferred" Return="ignore" SuppressModularization="yes" />
        <CustomActionRef Id="WixCheckRebootRequired" />

        <InstallExecuteSequence>
            <Custom Action="WixCloseApplications" Before="InstallFiles" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="WixRegisterRestartResources" BinaryKey="WixCA" DllEntry="WixRegisterRestartResources" Execute="immediate" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="WixRegisterRestartResources" Before="InstallValidate" Overridable="yes" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UI>
            <Error Id="$(var.msierrUSRFailedUserCreate)">!(loc.msierrUSRFailedUserCreate)</Error>
            <Error Id="$(var.msierrUSRFailedUserCreatePswd)">!(loc.msierrUSRFailedUserCreatePswd)</Error>
            <Error Id="$(var.msierrUSRFailedUserGroupAdd)">!(loc.msierrUSRFailedUserGroupAdd)</Error>
            <Error Id="$(var.msierrUSRFailedGrantLogonAsService)">Failed to grant 'logon as service' rights to user.  ([2]   [3]   [4]   [5])</Error>
            <Error Id="$(var.msierrUSRFailedUserCreateExists)">!(loc.msierrUSRFailedUserCreateExists)</Error>
        </UI>

        <!-- This is necessary to hide the CreateUser custom action data property that could potentially contain passwords -->
        <Property Id="CreateUser" Value="nothing" Hidden="yes" />

        <CustomAction Id="ConfigureUsers" BinaryKey="ScaSchedule" DllEntry="ConfigureUsers" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="CreateUser" BinaryKey="ScaExecute" DllEntry="CreateUser" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" />
        <CustomAction Id="CreateUserRollback" BinaryKey="ScaExecute" DllEntry="RemoveUser" Impersonate="no" Execute="rollback" Return="check" HideTarget="yes" SuppressModularization="yes" />
        <!-- RemoveUser is a type commit action because it is not possible to rollback the removal of a user -->
        <CustomAction Id="RemoveUser" BinaryKey="ScaExecute" DllEntry="RemoveUser" Impersonate="no" Execute="commit" Return="ignore" HideTarget="yes" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="ConfigureUsers" Before="InstallFiles" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UI>
            <Error Id="$(var.msierrSMBFailedCreate)">!(loc.msierrSMBFailedCreate)</Error>
            <Error Id="$(var.msierrSMBFailedDrop)">!(loc.msierrSMBFailedDrop)</Error>
        </UI>

        <CustomAction Id="ConfigureSmbInstall" BinaryKey="ScaSchedule" DllEntry="ConfigureSmbInstall" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ConfigureSmbUninstall" BinaryKey="ScaSchedule" DllEntry="ConfigureSmbUninstall" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="CreateSmb" BinaryKey="ScaExecute" DllEntry="CreateSmb" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" />
        <CustomAction Id="CreateSmbRollback" BinaryKey="ScaExecute" DllEntry="DropSmb" Impersonate="no" Execute="rollback" Return="ignore" HideTarget="yes" SuppressModularization="yes" />
        <CustomAction Id="DropSmb" BinaryKey="ScaExecute" DllEntry="DropSmb" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" />
        <CustomAction Id="DropSmbRollback" BinaryKey="ScaExecute" DllEntry="CreateSmb" Impersonate="no" Execute="rollback" Return="ignore" HideTarget="yes" SuppressModularization="yes" />
        
        <InstallExecuteSequence>
            <Custom Action="ConfigureSmbInstall" After="InstallFiles" Overridable="yes">VersionNT &gt; 400</Custom>
            <Custom Action="ConfigureSmbUninstall" After="RemoveFiles" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UI>
            <Error Id="$(var.msierrInstallPerfCounterData)">!(loc.msierrInstallPerfCounterData)</Error>
            <Error Id="$(var.msierrUninstallPerfCounterData)">!(loc.msierrUninstallPerfCounterData)</Error>
        </UI>

        <CustomAction Id="InstallPerfCounterData" BinaryKey="ScaSchedule" DllEntry="InstallPerfCounterData" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="UninstallPerfCounterData" BinaryKey="ScaSchedule" DllEntry="UninstallPerfCounterData" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="RegisterPerfCounterData" BinaryKey="ScaExecute" DllEntry="RegisterPerfCounterData" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" />
        <CustomAction Id="UnregisterPerfCounterData" BinaryKey="ScaExecute" DllEntry="UnregisterPerfCounterData" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" />
        <CustomAction Id="RollbackRegisterPerfCounterData" BinaryKey="ScaExecute" DllEntry="UnregisterPerfCounterData" Impersonate="no" Execute="rollback" Return="check" HideTarget="yes" SuppressModularization="yes" />
        <CustomAction Id="RollbackUnregisterPerfCounterData" BinaryKey="ScaExecute" DllEntry="RegisterPerfCounterData" Impersonate="no" Execute="rollback" Return="check" HideTarget="yes" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="InstallPerfCounterData" After="WriteRegistryValues" Overridable="yes">VersionNT &gt; 400</Custom>
            <Custom Action="UninstallPerfCounterData" Before="RemoveRegistryValues" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UI>
            <Error Id="$(var.msierrPERFMONFailedRegisterDLL)">!(loc.msierrPERFMONFailedRegisterDLL)</Error>
            <Error Id="$(var.msierrPERFMONFailedUnregisterDLL)">!(loc.msierrPERFMONFailedUnregisterDLL)</Error>
        </UI>

        <CustomAction Id="ConfigurePerfmonInstall" BinaryKey="ScaSchedule" DllEntry="ConfigurePerfmonInstall" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ConfigurePerfmonUninstall" BinaryKey="ScaSchedule" DllEntry="ConfigurePerfmonUninstall" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="RegisterPerfmon" BinaryKey="ScaExecute" DllEntry="RegisterPerfmon" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" />
        <CustomAction Id="UnregisterPerfmon" BinaryKey="ScaExecute" DllEntry="UnregisterPerfmon" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" />
        <CustomAction Id="RollbackRegisterPerfmon" BinaryKey="ScaExecute" DllEntry="UnregisterPerfmon" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" />
        <CustomAction Id="RollbackUnregisterPerfmon" BinaryKey="ScaExecute" DllEntry="RegisterPerfmon" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="ConfigurePerfmonInstall" After="WriteRegistryValues" Overridable="yes">VersionNT &gt; 400</Custom>
            <Custom Action="ConfigurePerfmonUninstall" Before="RemoveRegistryValues" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="ConfigurePerfmonManifestRegister" BinaryKey="ScaSchedule" DllEntry="ConfigurePerfmonManifestRegister" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ConfigurePerfmonManifestUnregister" BinaryKey="ScaSchedule" DllEntry="ConfigurePerfmonManifestUnregister" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="RegisterPerfmonManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" />
        <CustomAction Id="UnregisterPerfmonManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="deferred" Return="ignore" SuppressModularization="yes" />
        <CustomAction Id="RollbackRegisterPerfmonManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="rollback" Return="ignore" SuppressModularization="yes" />
        <CustomAction Id="RollbackUnregisterPerfmonManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="ConfigurePerfmonManifestRegister" After="InstallFiles" Overridable="yes">VersionNT &gt; 400</Custom>
            <Custom Action="ConfigurePerfmonManifestUnregister" After="RemoveRegistryValues" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>
    
    <Fragment>
        <CustomAction Id="ConfigureEventManifestRegister" BinaryKey="ScaSchedule" DllEntry="ConfigureEventManifestRegister" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ConfigureEventManifestUnregister" BinaryKey="ScaSchedule" DllEntry="ConfigureEventManifestUnregister" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="RegisterEventManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" />
        <CustomAction Id="UnregisterEventManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="deferred" Return="ignore" SuppressModularization="yes" />
        <CustomAction Id="RollbackRegisterEventManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="rollback" Return="ignore" SuppressModularization="yes" />
        <CustomAction Id="RollbackUnregisterEventManifest" BinaryKey="WixCA" DllEntry="CAQuietExec" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="ConfigureEventManifestRegister" After="SchedXmlFile" Overridable="yes">VersionNT &gt; 400</Custom>
            <Custom Action="ConfigureEventManifestUnregister" After="RemoveRegistryValues" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>
    
    <Fragment>
        <UI Id="SecureObjectsErrors">
            <Error Id="$(var.msierrSecureObjectsFailedCreateSD)">!(loc.msierrSecureObjectsFailedCreateSD)</Error>
            <Error Id="$(var.msierrSecureObjectsFailedSet)">!(loc.msierrSecureObjectsFailedSet)</Error>
            <Error Id="$(var.msierrSecureObjectsUnknownType)">!(loc.msierrSecureObjectsUnknownType)</Error>
        </UI>
    </Fragment>

    <Fragment>
        <UIRef Id="SecureObjectsErrors"/>

        <CustomAction Id="SchedSecureObjects" BinaryKey="WixCA" DllEntry="SchedSecureObjects" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="SchedSecureObjectsRollback" BinaryKey="WixCA" DllEntry="SchedSecureObjectsRollback" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecSecureObjects" BinaryKey="WixCA" DllEntry="ExecSecureObjects" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecSecureObjectsRollback" BinaryKey="WixCA" DllEntry="ExecSecureObjectsRollback" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <!-- Condition this so it runs on install and MMode, but not uninstall -->
            <Custom Action="SchedSecureObjects" After="InstallServices" Overridable="yes">NOT REMOVE~="ALL" AND VersionNT &gt; 400</Custom>
            <Custom Action="SchedSecureObjectsRollback" After="UnpublishFeatures" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="SecureObjectsErrors"/>

        <CustomAction Id="SchedSecureObjects_x64" BinaryKey="WixCA_x64" DllEntry="SchedSecureObjects" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="SchedSecureObjectsRollback_x64" BinaryKey="WixCA_x64" DllEntry="SchedSecureObjectsRollback" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecSecureObjects_64" BinaryKey="WixCA_x64" DllEntry="ExecSecureObjects" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecSecureObjectsRollback_64" BinaryKey="WixCA_x64" DllEntry="ExecSecureObjectsRollback" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <!-- Condition this so it runs on install and MMode, but not uninstall -->
            <Custom Action="SchedSecureObjects_x64" After="InstallServices" Overridable="yes">NOT REMOVE~="ALL" AND VersionNT &gt; 400</Custom>
            <Custom Action="SchedSecureObjectsRollback_x64" After="UnpublishFeatures" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <?if $(var.BuildIA64)=true ?>
        <Fragment>
            <UIRef Id="SecureObjectsErrors"/>

            <CustomAction Id="SchedSecureObjects_ia64" BinaryKey="WixCA_ia64" DllEntry="SchedSecureObjects" Execute="immediate" Return="check" SuppressModularization="yes" />
            <CustomAction Id="SchedSecureObjectsRollback_ia64" BinaryKey="WixCA_ia64" DllEntry="SchedSecureObjectsRollback" Execute="immediate" Return="check" SuppressModularization="yes" />
            <CustomAction Id="ExecSecureObjects_64" BinaryKey="WixCA_ia64" DllEntry="ExecSecureObjects" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" />
            <CustomAction Id="ExecSecureObjectsRollback_64" BinaryKey="WixCA_ia64" DllEntry="ExecSecureObjectsRollback" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" />

            <InstallExecuteSequence>
                <!-- Condition this so it runs on install and MMode, but not uninstall -->
                <Custom Action="SchedSecureObjects_ia64" After="InstallServices" Overridable="yes">NOT REMOVE~="ALL" AND VersionNT &gt; 400</Custom>
                <Custom Action="SchedSecureObjectsRollback_ia64" After="UnpublishFeatures" Overridable="yes">VersionNT &gt; 400</Custom>
            </InstallExecuteSequence>
        </Fragment>
    <?endif?>

    <Fragment>
        <UI>
            <!-- Put Service Config Error Messages here if we ever make any -->
        </UI>

        <CustomAction Id="SchedServiceConfig" BinaryKey="WixCA" DllEntry="SchedServiceConfig" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecServiceConfig" BinaryKey="WixCA" DllEntry="ExecServiceConfig" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" />
        <CustomAction Id="RollbackServiceConfig" BinaryKey="WixCA" DllEntry="RollbackServiceConfig" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <!-- Condition this so it runs on install and MMode, but not uninstall -->
            <Custom Action="SchedServiceConfig" After="InstallServices" Overridable="yes">NOT REMOVE~="ALL" AND VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UI>
            <Error Id="$(var.msierrXmlFileFailedRead)">!(loc.msierrXmlFileFailedRead)</Error>
            <Error Id="$(var.msierrXmlFileFailedOpen)">!(loc.msierrXmlFileFailedOpen)</Error>
            <Error Id="$(var.msierrXmlFileFailedSelect)">!(loc.msierrXmlFileFailedSelect)</Error>
            <Error Id="$(var.msierrXmlFileFailedSave)">!(loc.msierrXmlFileFailedSave)</Error>
        </UI>

        <CustomAction Id="SchedXmlFile" BinaryKey="WixCA" DllEntry="SchedXmlFile" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecXmlFile" BinaryKey="WixCA" DllEntry="ExecXmlFile" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecXmlFileRollback" BinaryKey="WixCA" DllEntry="ExecXmlFileRollback" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="SchedXmlFile" After="DuplicateFiles" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UI>
            <Error Id="$(var.msierrXmlConfigFailedRead)">!(loc.msierrXmlConfigFailedRead)</Error>
            <Error Id="$(var.msierrXmlConfigFailedOpen)">!(loc.msierrXmlConfigFailedOpen)</Error>
            <Error Id="$(var.msierrXmlConfigFailedSelect)">!(loc.msierrXmlConfigFailedSelect)</Error>
            <Error Id="$(var.msierrXmlConfigFailedSave)">!(loc.msierrXmlConfigFailedSave)</Error>
        </UI>

        <CustomAction Id="SchedXmlConfig" BinaryKey="WixCA" DllEntry="SchedXmlConfig" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecXmlConfig" BinaryKey="WixCA" DllEntry="ExecXmlConfig" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" />
        <CustomAction Id="ExecXmlConfigRollback" BinaryKey="WixCA" DllEntry="ExecXmlConfigRollback" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="SchedXmlConfig" After="DuplicateFiles" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="WixSchedInternetShortcuts" BinaryKey="WixCA" DllEntry="WixSchedInternetShortcuts" Execute="immediate" Return="check" SuppressModularization="yes" />
        <CustomAction Id="WixRollbackInternetShortcuts" BinaryKey="WixCA" DllEntry="WixRollbackInternetShortcuts" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" />
        <CustomAction Id="WixCreateInternetShortcuts" BinaryKey="WixCA" DllEntry="WixCreateInternetShortcuts" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="WixSchedInternetShortcuts" Before="RemoveFolders" Overridable="yes">VersionNT &gt; 400</Custom>
            <Custom Action="WixRollbackInternetShortcuts" Before="WixCreateInternetShortcuts" Overridable="yes">VersionNT &gt; 400</Custom>
            <Custom Action="WixCreateInternetShortcuts" After="CreateShortcuts" Overridable="yes">VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="WixFailWhenDeferred" BinaryKey="WixCA" DllEntry="WixFailWhenDeferred" Execute="deferred" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="WixFailWhenDeferred" Before="InstallFinalize" Overridable="yes">WIXFAILWHENDEFERRED=1 AND VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="WixExitEarlyWithSuccess" BinaryKey="WixCA" DllEntry="WixExitEarlyWithSuccess" Execute="immediate" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="WixExitEarlyWithSuccess" After="FindRelatedProducts" Overridable="yes">NEWERVERSIONDETECTED AND VersionNT &gt; 400</Custom>
        </InstallExecuteSequence>
    </Fragment>

    <!-- WiX Custom Action DLL Definitions -->

    <Fragment>
        <Binary Id="WixCA" SourceFile="$(var.wixcadll)" />
    </Fragment>

    <Fragment>
        <Binary Id="WixCA_x64" SourceFile="$(var.wixca_x64dll)" />
    </Fragment>

    <?if $(var.BuildIA64)=true ?>
        <Fragment>
            <Binary Id="WixCA_ia64" SourceFile="$(var.wixca_ia64dll)" />
        </Fragment>
    <?endif?>

    <!-- Server Custom Action DLL Definitions -->

    <Fragment>
        <Binary Id="ScaSchedule" SourceFile="$(var.scaschedDll)" />
        <Binary Id="ScaExecute" SourceFile="$(var.scaexecDll)" />
    </Fragment>
    
    <!-- WiX OS-detection properties and custom action -->
    <Fragment>
        <CustomAction Id="WixQueryOsInfo" BinaryKey="WixCA" DllEntry="WixQueryOsInfo" Execute="firstSequence" Return="check" SuppressModularization="yes" />
        
        <InstallExecuteSequence>
            <Custom Action="WixQueryOsInfo" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
        </InstallExecuteSequence>
        
        <InstallUISequence>
            <Custom Action="WixQueryOsInfo" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
        </InstallUISequence>
    </Fragment>

    <Fragment>
        <Property Id="WIX_SUITE_BACKOFFICE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_BLADE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_COMMUNICATIONS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_COMPUTE_SERVER" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_DATACENTER" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_EMBEDDED_RESTRICTED" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_EMBEDDEDNT" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_ENTERPRISE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_MEDIACENTER" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_PERSONAL" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_SECURITY_APPLIANCE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_SERVERR2" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_SINGLEUSERTS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_SMALLBUSINESS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_SMALLBUSINESS_RESTRICTED" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_STARTER" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_STORAGE_SERVER" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_TABLETPC" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_TERMINAL" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_SUITE_WH_SERVER" Secure="yes" />
        <CustomActionRef Id="WixQueryOsInfo" />
    </Fragment>

    <Fragment>
        <CustomAction Id="WixQueryOsDirs" BinaryKey="WixCA" DllEntry="WixQueryOsDirs" Execute="firstSequence" Return="check" SuppressModularization="yes" />
        
        <InstallExecuteSequence>
            <Custom Action="WixQueryOsDirs" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
        </InstallExecuteSequence>
        
        <InstallUISequence>
            <Custom Action="WixQueryOsDirs" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
        </InstallUISequence>
    </Fragment>

    <Fragment>
        <Property Id="WIX_DIR_ADMINTOOLS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_ALTSTARTUP" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_CDBURN_AREA" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COMMON_ADMINTOOLS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COMMON_ALTSTARTUP" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COMMON_DOCUMENTS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COMMON_FAVORITES" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COMMON_MUSIC" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COMMON_PICTURES" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COMMON_VIDEO" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_COOKIES" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_DESKTOP" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_HISTORY" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_INTERNET_CACHE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_MYMUSIC" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_MYPICTURES" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_MYVIDEO" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_NETHOOD" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_PERSONAL" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_PRINTHOOD" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_PROFILE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_RECENT" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_DIR_RESOURCES" Secure="yes" />
        <CustomActionRef Id="WixQueryOsDirs" />
    </Fragment>

    <Fragment>
        <CustomAction Id="WixQueryOsWellKnownSID" BinaryKey="WixCA" DllEntry="WixQueryOsWellKnownSID" Execute="firstSequence" Return="check" SuppressModularization="yes" />

        <InstallExecuteSequence>
            <Custom Action="WixQueryOsWellKnownSID" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
        </InstallExecuteSequence>

        <InstallUISequence>
            <Custom Action="WixQueryOsWellKnownSID" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
        </InstallUISequence>
    </Fragment>
  
    <Fragment>
        <Property Id="WIX_ACCOUNT_LOCALSYSTEM" Secure="yes" />
        <CustomActionRef Id="WixQueryOsWellKnownSID" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_ACCOUNT_LOCALSERVICE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsWellKnownSID" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_ACCOUNT_NETWORKSERVICE" Secure="yes" />
        <CustomActionRef Id="WixQueryOsWellKnownSID" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_ACCOUNT_ADMINISTRATORS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsWellKnownSID" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_ACCOUNT_USERS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsWellKnownSID" />
    </Fragment>
    <Fragment>
        <Property Id="WIX_ACCOUNT_GUESTS" Secure="yes" />
        <CustomActionRef Id="WixQueryOsWellKnownSID" />
    </Fragment>

    <Fragment>
      <CustomAction Id="WixQueryOsDriverInfo" BinaryKey="WixCA" DllEntry="WixQueryOsDriverInfo" Execute="firstSequence" Return="check" SuppressModularization="yes" />

      <InstallExecuteSequence>
        <Custom Action="WixQueryOsDriverInfo" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
      </InstallExecuteSequence>

      <InstallUISequence>
        <Custom Action="WixQueryOsDriverInfo" After="AppSearch" Overridable="yes">VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)</Custom>
      </InstallUISequence>
    </Fragment>

    <Fragment>
      <Property Id="WIX_WDDM_DRIVER_PRESENT" Secure="yes" />
      <CustomActionRef Id="WixQueryOsDriverInfo" />
    </Fragment>

    <Fragment>
      <Property Id="WIX_DWM_COMPOSITION_ENABLED" Secure="yes" />
      <CustomActionRef Id="WixQueryOsDriverInfo" />
    </Fragment>

    <!-- ShellExec custom actions (for when only one is needed; multiple executions need their own IDs) --> 
    <Fragment>
        <PropertyRef Id="WixShellExecBinaryId" />
        <CustomAction Id="WixShellExecBinary" BinaryKey="WixCA" DllEntry="WixShellExecBinary" Execute="immediate" Return="check" Impersonate="yes" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="WixShellExecTarget" />
        <CustomAction Id="WixShellExec" BinaryKey="WixCA" DllEntry="WixShellExec" Execute="immediate" Return="check" Impersonate="yes" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="QtExecCmdLine" />
        <CustomAction Id="QtExec" BinaryKey="WixCA" DllEntry="CAQuietExec" Execute="immediate" Return="check" Impersonate="yes" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="QtExec64CmdLine" />
        <CustomAction Id="QtExec64" BinaryKey="WixCA" DllEntry="CAQuietExec64" Execute="immediate" Return="check" Impersonate="yes" />
    </Fragment>
</Wix>
